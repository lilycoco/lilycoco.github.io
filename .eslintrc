{
  "extends": [
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "prettier/react",
    "prettier/@typescript-eslint",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended"
  ],
  "plugins": ["@typescript-eslint", "react-hooks"],
  "parser": "@typescript-eslint/parser",
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "parserOptions": {
    "sourceType": "module",
    "ecmaVersion": 7,
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "rules": {
    "@typescript-eslint/no-unused-vars":"off",
    "@typescript-eslint/explicit-member-accessibility": "off",
        // complexity should be less than 10
    // https://www.infoq.com/jp/news/2008/04/cyclomaticcomplexity/
    "complexity": ["warn", 10],
    // I love "" the much
    "quotes": ["error", "double"],
    // Disable require that interface names should prefixed with I
    "@typescript-eslint/interface-name-prefix": "off",
    // Disable require explicit return types on functions and class methods
    "@typescript-eslint/explicit-function-return-type": "off",
    // Disable we offten use empty interface as a placeholder
    "@typescript-eslint/no-empty-interface": "off",
    // Disable we offten use @ts-expect-error comment
    "@typescript-eslint/ban-ts-comment": [
      "error",
      { "ts-expect-error": "allow-with-description" }
    ],
    // Disable we don't use propTypes
    "react/prop-types": "off",
    // Disable prevent usage of the return value of ReactDOM.render
    "react/no-render-return-value": "off",
    // React hook preset rules
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "prettier/prettier": [
      "error",
      {
        "trailingComma": "all"
      }
    ]
  },
  "root": true,
  "overrides": [
    {
      "files": ["*.js"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off"
      }
    }
  ]
}